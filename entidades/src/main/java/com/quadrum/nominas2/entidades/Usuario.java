package com.quadrum.nominas2.entidades;
// Generated 7/07/2015 11:49:50 AM by Hibernate Tools 3.6.0

import static com.quadrum.nominas2.entidades.ExpRegulares.NOMBRES;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.URL;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "nomifast")
@AllArgsConstructor
@NoArgsConstructor
public class Usuario implements java.io.Serializable {

    @Id
    @Column(name = "user_name", unique = true, nullable = false, length = 50)
    @Email(message = "El Correo no es válido")
    @Getter @Setter private String userName;

    @Column(name = "password", nullable = false, length = 150)
    @Getter @Setter private String password;

    @Column(name = "enable", nullable = false)
    @Getter @Setter private boolean enable;

    @Column(name = "primera_sesion", nullable = false)
    @Getter @Setter private boolean primeraSesion;

    @Pattern(regexp = NOMBRES + "44}", message = "El nombre del usuario no puede ser vacio")
    @Column(name = "nombre", nullable = false, length = 45)
    @Getter @Setter private String nombre;
    
    @Column(name = "link", nullable = false, length = 500)
    @URL(message = "No es un link válido")
    @Getter @Setter private String link;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    @Getter @Setter private List<Sucursal> sucursals;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    @Getter @Setter private List<Empleado> empleados;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    @Getter @Setter private List<Administrador> admins;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    @Getter @Setter private List<RolUsuario> rolUsuarios;

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "usuario")
    @Getter @Setter private Empresa empresa;

    public Usuario(String userName, String password, boolean enable, boolean primeraSesion, String nombre) {
        this.userName = userName;
        this.password = password;
        this.enable = enable;
        this.primeraSesion = primeraSesion;
        this.nombre = nombre;
        
    }

}
