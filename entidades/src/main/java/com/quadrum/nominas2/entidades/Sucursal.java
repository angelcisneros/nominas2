package com.quadrum.nominas2.entidades;
// Generated 26/06/2015 12:29:26 PM by Hibernate Tools 3.6.0

import static com.quadrum.nominas2.entidades.ExpRegulares.NOMBRES;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.validator.constraints.NotBlank;

/**
 * Sucursal generated by hbm2java
 */
@Entity
@Table(name = "sucursal", catalog = "nomifast")
@AllArgsConstructor
@NoArgsConstructor
public class Sucursal implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    @Getter @Setter private Integer id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario")
    @Getter @Setter private Usuario usuario;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EMPRESA", nullable = false)
    @Getter @Setter private Empresa empresa;

    @Pattern(regexp = "^[A-Z,Ã‘,&]{3,4}[0-9]{2}[0-1][0-9][0-3][0-9][A-Z,0-9]{3}$", message="Verifique la estructura del RFC")
    @Column(name = "rfc", nullable = false, length = 45)
    @Getter @Setter private String rfc;
    
    @Pattern(regexp = NOMBRES + "145}", message = "El nombre del usuario no puede ser vacio")
    @Column(name = "nombre", nullable = false, length = 145)
    @Getter @Setter private String nombre;

    @Column(name = "matriz", nullable = false)
    @Getter @Setter private boolean matriz;

    @Column(name = "representacion_impresa", nullable = false)
    @Getter @Setter private boolean representacionImpresa;

    @Column(name = "cer", nullable = false)
    @Getter @Setter private byte[] cer;

    @Column(name = "ky", nullable = false)
    @Getter @Setter private byte[] ky;

    @NotBlank
    @Column(name = "password", nullable = false, length = 45)
    @Getter @Setter private String password;

    @Column(name = "folios_consumidos", nullable = false)
    @Getter @Setter private int foliosConsumidos;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sucursal")
    @Getter @Setter private List<Recibo> recibos;

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "sucursal")
    @Getter @Setter private Domicilio domicilio;

    
    public Sucursal(Empresa empresa, String rfc, boolean matriz, boolean representacionImpresa, byte[] cer, byte[] ky, String password, int foliosConsumidos) {
        this.empresa = empresa;
        this.rfc = rfc;
        this.matriz = matriz;
        this.representacionImpresa = representacionImpresa;
        this.cer = cer;
        this.ky = ky;
        this.password = password;
        this.foliosConsumidos = foliosConsumidos;
    }
}
