package com.quadrum.nominas2.entidades;
// Generated 26/06/2015 12:29:26 PM by Hibernate Tools 3.6.0

import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Sucursal generated by hbm2java
 */
@Entity
@Table(name = "sucursal", catalog = "nomifast")
@AllArgsConstructor
@NoArgsConstructor
public @Data class Sucursal implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Integer id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario")
    private Usuario usuario;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EMPRESA", nullable = false)
    private Empresa empresa;

    @Column(name = "rfc", nullable = false, length = 45)
    private String rfc;

    @Column(name = "matriz", nullable = false)
    private boolean matriz;

    @Column(name = "representacion_impresa", nullable = false)
    private boolean representacionImpresa;

    @Column(name = "cer", nullable = false)
    private byte[] cer;

    @Column(name = "ky", nullable = false)
    private byte[] ky;

    @Column(name = "password_csd", nullable = false, length = 45)
    private String passwordCsd;

    @Column(name = "folios_consumidos", nullable = false)
    private int foliosConsumidos;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sucursal")
    private List<Recibo> recibos;

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "sucursal")
    private Domicilio domicilio;

    
    public Sucursal(Empresa empresa, String rfc, boolean matriz, boolean representacionImpresa, byte[] cer, byte[] ky, String passwordCsd, int foliosConsumidos) {
        this.empresa = empresa;
        this.rfc = rfc;
        this.matriz = matriz;
        this.representacionImpresa = representacionImpresa;
        this.cer = cer;
        this.ky = ky;
        this.passwordCsd = passwordCsd;
        this.foliosConsumidos = foliosConsumidos;
    }
}
